double* R_Vector(int);
double* R_VectorInit(int,double);
double** R_Matrix(int,int);
double** R_MatrixInit(int,int,double);
double** R_Data2Matrix(double*,int,int);
int** R_Data2iMatrix(int*,int,int);
double quform(double*,double*,int);
double biform(double*, double*, double*, int);
void Rprintvec(char*,double*,int);
void Rprintmat(char*,double**,int,int);
void RprintVecAsMat(char*,double*,int,int);
void RprintIvec(char*,int*,int);
void RprintImat(char*,int**,int,int);
void RprintIVecAsMat(char*,int*,int,int);
int factorial(int);
void ran_mvnorm(double*,double*,int,double*,double*);
void ran_wish(int,double*,int,double*,double*,double*,double*);
void ran_dirich(double*, int, double*, double*);
double rtnorm(double, double, double, double);
double dmvnorm(double*,double*,double*,int,double,double*,int);
double dsst(double, double, double, double, int);
double dinvwish(double*, double, double, int, int);
double dinvgamma(double, double, double, int);
double dN_IG(double, double, double, double, double, double, int);
double dnlp(double, double, double, double, double, int);
double dmultinom(int*, double*, int, int, int);
double ddirich(double*, double*, int, int);
double dtnorm(double, double, double, double, double, int);
double gsimconEV(double, double, int, double, int);
double gsimconNN(double, double, double, double, double, double, int, int, int, int);
double gsimconMVN_MVN(double*, double*, double*, double*, double, int, int,  int, int);
double gsimconNNIG(double, double, double, double, double, double, double, double,
                  int, int, int, int);
double gsimconMVN_MVNIW(double*, double, double, double*, double*, double*, double, int,
						int, int, int, double*, double*, double*, double*, double*);
double gsimcatDM(int*, double*, int, int, int);
double Cohesion1(double*, double*, double, int, int);
double Cohesion2(double*, double*, double, int, int);
double Cohesion3_4(double*, double*, double*, double, double, double*, int, int, int);
double Cohesion5(double*, double*, double, int, int);
double Cohesion6(double*, double*, double, int, int);
void rPPMs(int, double, int, double*, double*, int*, int*, int*, double, double, double*, double,
           double, double*, double);
double r_truncnorm(double, double, double, double);
